name : second workflow
on : 
  push:
    branches:
      - "master"

env:
  TESTING_PACKAGE: 'UnitTesting'

jobs:
    test:
      # continue-on-error: true
      strategy: 
        matrix:
          operating-system: [ubuntu-22.04 , ubuntu-latest]
          python-versions: ["3.10" , '3.11']
      runs-on: ${{ matrix.operating-system }}
      env:
        USER_GIT: 'runner'
      steps:
        - name : 'get the code'
          uses : actions/checkout@v3
        
        - name : install python 
          uses : actions/setup-python@v3
          with :
            python-version: ${{ matrix.python-versions}}
            cache : 'pip'
        - name : install dependencies 
          run  : pip install -r requirements.txt
        
        - name : run the test
          id    : test-run
          run  : python3 -m unittest tests/test_main.py

        
        - name : upload artifacts
          if   : failure() && steps.test-run.outcome == 'failure'
          uses : actions/upload-artifact@v3
          with : 
            name: artifacats-log
            path: logs


    deploy:   
      runs-on: ubuntu-22.04
      needs : [test]
      # if: failure()
      steps:
        - name : deploy
          run  : echo  "Deploying ....."

        - name : got information 
          run  : | 
           echo "${{ env.TESTING_PACKAGE }} "|  
        - name : got information 2
          run :  | 
           echo " $TESTING_PACKAGE "


    build:
      uses: ./.github/workflows/useabke.yaml


    dockerizing: 
      runs-on: ubuntu-22.04
      needs: [deploy , build]
      # if: failure() 
      steps:
        - name : build image
          run : echo "Runing our docker "

    